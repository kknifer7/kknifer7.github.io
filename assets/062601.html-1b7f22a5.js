const l=JSON.parse('{"key":"v-d161a370","path":"/blogs/note/062601.html","title":"Java多线程基础","lang":"en-US","frontmatter":{"title":"Java多线程基础","date":"2023/06/26","tags":["Java","多线程"],"categories":["学习笔记"]},"headers":[{"level":2,"title":"1. 概念","slug":"_1-概念","link":"#_1-概念","children":[]},{"level":2,"title":"2. 线程类的创建","slug":"_2-线程类的创建","link":"#_2-线程类的创建","children":[{"level":3,"title":"2.1 实现Runnable接口","slug":"_2-1-实现runnable接口","link":"#_2-1-实现runnable接口","children":[]},{"level":3,"title":"2.2 继承Thread类","slug":"_2-2-继承thread类","link":"#_2-2-继承thread类","children":[]},{"level":3,"title":"2.3 实现Callable接口","slug":"_2-3-实现callable接口","link":"#_2-3-实现callable接口","children":[]}]},{"level":2,"title":"3. 线程的五大状态","slug":"_3-线程的五大状态","link":"#_3-线程的五大状态","children":[]},{"level":2,"title":"4. 线程的观测状态","slug":"_4-线程的观测状态","link":"#_4-线程的观测状态","children":[]},{"level":2,"title":"5. 线程方法","slug":"_5-线程方法","link":"#_5-线程方法","children":[]},{"level":2,"title":"6. 停止线程","slug":"_6-停止线程","link":"#_6-停止线程","children":[]},{"level":2,"title":"7. 线程休眠","slug":"_7-线程休眠","link":"#_7-线程休眠","children":[]},{"level":2,"title":"8. 线程礼让","slug":"_8-线程礼让","link":"#_8-线程礼让","children":[]},{"level":2,"title":"9. 线程强制执行（插队）","slug":"_9-线程强制执行-插队","link":"#_9-线程强制执行-插队","children":[]},{"level":2,"title":"10. 守护线程","slug":"_10-守护线程","link":"#_10-守护线程","children":[]},{"level":2,"title":"11. 线程同步","slug":"_11-线程同步","link":"#_11-线程同步","children":[{"level":3,"title":"11.1 同步方法","slug":"_11-1-同步方法","link":"#_11-1-同步方法","children":[]},{"level":3,"title":"11.2 同步块","slug":"_11-2-同步块","link":"#_11-2-同步块","children":[]},{"level":3,"title":"11.3 COW容器","slug":"_11-3-cow容器","link":"#_11-3-cow容器","children":[]},{"level":3,"title":"11.4 死锁","slug":"_11-4-死锁","link":"#_11-4-死锁","children":[]},{"level":3,"title":"11.5 Lock","slug":"_11-5-lock","link":"#_11-5-lock","children":[]}]},{"level":2,"title":"12. 线程协作","slug":"_12-线程协作","link":"#_12-线程协作","children":[{"level":3,"title":"12.1 线程通信","slug":"_12-1-线程通信","link":"#_12-1-线程通信","children":[]},{"level":3,"title":"12.2 解决方案（生产者/消费者模式）","slug":"_12-2-解决方案-生产者-消费者模式","link":"#_12-2-解决方案-生产者-消费者模式","children":[]}]},{"level":2,"title":"13. 线程池","slug":"_13-线程池","link":"#_13-线程池","children":[{"level":3,"title":"13.1 使用","slug":"_13-1-使用","link":"#_13-1-使用","children":[]}]},{"level":2,"title":"14. ThreadLocal","slug":"_14-threadlocal","link":"#_14-threadlocal","children":[{"level":3,"title":"14.1 简单介绍","slug":"_14-1-简单介绍","link":"#_14-1-简单介绍","children":[]},{"level":3,"title":"14.2 内存泄漏问题","slug":"_14-2-内存泄漏问题","link":"#_14-2-内存泄漏问题","children":[]},{"level":3,"title":"14.3 InheritableThreadLocal","slug":"_14-3-inheritablethreadlocal","link":"#_14-3-inheritablethreadlocal","children":[]},{"level":3,"title":"14.4 TransmittableThreadLocal","slug":"_14-4-transmittablethreadlocal","link":"#_14-4-transmittablethreadlocal","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"blogs/note/062601.md"}');export{l as data};
